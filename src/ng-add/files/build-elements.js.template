const fs = require('fs-extra');
const concat = require('concat');
const replace = require('replace-in-file');
const options = {
    files: 'elements/<%= project %>-element.js',
    from: /webpackJsonp/g,
    to: '<%= project %>Jsonp'
};

(async function build() {
  const files = [<% if (ngVersion > 7) {%>
    './dist/<%= project %>/runtime-es5.js',
    './dist/<%= project %>/main-es5.js'
    <% } else {%>
    './dist/<%= project %>/runtime.js',
    './dist/<%= project %>/main.js'
    <% } %>
  ];

  const jsInIndex = [
    { name: 'webcomponents-bundle.js', from: 'node_modules/@webcomponents/webcomponentsjs/' },
    {
      name: 'custom-elements-es5-adapter.js',
      from: 'node_modules/@webcomponents/webcomponentsjs/'
    },
    { name: 'zone.min.js', from: 'node_modules/zone.js/dist/' },
    { name: 'polyfill.min.js', from: 'node_modules/@babel/polyfill/dist/' },
    { name: 'index.html', from: 'src/' }
  ];

  await fs.ensureDir('elements');
  await concat(files, 'elements/<%= project %>-element.js');
  
  jsInIndex.forEach(
    async element =>
      await fs.copy(`${element.from}${element.name}`, `elements/${element.name}`, err => {
        if (err) return console.error(err);
        console.log(`${element.name} success!`);
      })
  );
  
  await replace(options);
})();
