import { appendFileSync, copyFile, emptyDirSync, readFileSync } from 'fs-extra';
import replaceInFile from 'replace-in-file';

const options = {
  files: 'elements/<%= project %>-element.js',
  from: /webpackJsonp/g,
  to: '<%= project %>Jsonp'
};

const files = ['./dist/<%= project %>/runtime-es5.js', './dist/<%= project %>/main-es5.js'];

const jsInIndex = [
  {
    name: 'webcomponents-bundle.js',
    from: 'node_modules/@webcomponents/webcomponentsjs/'
  },
  {
    name: 'custom-elements-es5-adapter.js',
    from: 'node_modules/@webcomponents/webcomponentsjs/'
  },
  { name: 'zone.min.js', from: 'node_modules/zone.js/dist/' },
  { name: 'polyfill.min.js', from: 'node_modules/@babel/polyfill/dist/' },
  { name: 'index.html', from: 'src/' }
];

emptyDirSync('elements');

files.forEach((file) => {
  appendFileSync('elements/<%= project %>-element.js', readFileSync(file) + '\r\n');
});

jsInIndex.forEach(element =>
  copyFile(
    `${element.from}${element.name}`,
    `elements/${element.name}`,
    err => {
      if (err) {
        return console.error(err);
      }
      console.log(`${element.name} success!`);
    }
  )
);

replaceInFile.sync(options);
